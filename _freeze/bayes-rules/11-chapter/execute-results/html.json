{
  "hash": "fb9163d817cb4055d406e29afcb01045",
  "result": {
    "markdown": "---\ntitle: \"Reading notes\"\nsubtitle: \"Extending the normal regression model\"\ndate: \"October 5, 2022\"\n---\n\n\n[(Original chapter)](https://www.bayesrulesbook.com/chapter-11.html)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bayesrules)\nlibrary(tidyverse)\nlibrary(brms)\nlibrary(cmdstanr)\nlibrary(rstanarm)\nlibrary(broom.mixed)\nlibrary(tidybayes)\nlibrary(ggdist)\nlibrary(patchwork)\n\n# Plot stuff\nclrs <- MetBrewer::met.brewer(\"Lakota\", 6)\ntheme_set(theme_bw())\n\n# Seed stuff\nset.seed(1234)\nBAYES_SEED <- 1234\n\ndata(weather_WU, package = \"bayesrules\")\n\nweather_WU <- weather_WU %>% \n  select(location, windspeed9am, humidity9am, pressure9am, temp9am, temp3pm) |> \n  mutate(across(c(temp9am, temp3pm, humidity9am, windspeed9am, pressure9am), \n                ~scale(., scale = FALSE), .names = \"{col}_centered\")) |> \n  mutate(across(c(temp9am, temp3pm, humidity9am, windspeed9am, pressure9am), \n                ~as.numeric(scale(., scale = FALSE)), .names = \"{col}_c\"))\n\nextract_attributes <- function(x) {\n  attributes(x) %>%\n    set_names(janitor::make_clean_names(names(.))) %>%\n    as_tibble() %>%\n    slice(1)\n}\n\nunscaled <- weather_WU %>%\n  select(ends_with(\"_centered\")) |> \n  summarize(across(everything(), ~extract_attributes(.))) |> \n  pivot_longer(everything()) |> \n  unnest(value) |> \n  split(~name)\n\n# Access these things like so:\n# unscaled$temp3pm_centered$scaled_center\n```\n:::\n\n\n# The general setup\n\nWe want to know the relationship between morning and afternoon temperatures in Wollongong and Uluru:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weather_WU, aes(x = temp9am, y = temp3pm)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nLooks linear enough. Let's make a model with vague priors (just in rstanarm and brms for now; no need for raw Stan here):\n\n$$\n\\begin{aligned}\nY_i \\mid \\beta_0, \\beta_1, \\beta_2, \\sigma &\\stackrel{\\text{ind}}{\\sim} \\mathcal{N}(\\mu_i, \\sigma^2) \\\\\n\\mu_i &= \\beta_{0c} + \\beta_1 X_{i1} \\\\\n\\\\\n\\beta_{0c} &\\sim \\mathcal{N}(25, 5) \\\\\n\\beta_{1} &\\sim \\mathcal{N}(0, 2.5) \\\\\n\\sigma &\\sim \\operatorname{Exponential}(1)\n\\end{aligned}\n$$\n\n::: {.panel-tabset}\n\n### rstanarm\n\n\n::: {.cell hash='11-chapter_cache/html/model-wu-rstanarm_4528aa563ef59832a33b0074500962a9'}\n\n```{.r .cell-code}\nweather_simple_rstanarm <- stan_glm(\n  temp3pm ~ temp9am,\n  data = weather_WU,\n  family = gaussian(),\n  prior_intercept = normal(25, 5),\n  prior = normal(0, 2.5, autoscale = TRUE),\n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0\n)\n```\n:::\n\n\n### brms\n\n\n::: {.cell hash='11-chapter_cache/html/model-wu-brms_2049c3c31246ff275622011ada1f62d1'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(25, 5), class = Intercept),\n            prior(normal(0, 2.5), class = b, coef = \"temp9am\"),\n            prior(exponential(1), class = sigma))\n\nweather_simple_brms <- brm(\n  bf(temp3pm ~ temp9am),\n  data = weather_WU,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0\n)\n## Start sampling\n```\n:::\n\n\n:::\n\nWe'll skip all the diagnostics for now—they cover them in the book. What really matters is how well this model fits the data, and it's not great. We've got a weird hump in the data that's not accounted for in the model. We've got to do something about that.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_check(weather_simple_brms, ndraws = 25)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n:::{.callout-note}\nI went into super detail in chapters 9 and 10, with examples in rstanarm, brms, and raw Stan, and with manual calculation of core Bayesian things, like posterior predictive checks, k-fold cross validation, and a bunch of other things. \n\nI don't do that in this chapter, since I've been doing Bayesian regression stuff for years. Here I just do rstanarm and brms versions of everything and pre-written checks like `pp_check()`; no raw Stan here. \n:::\n\n# 11.1: Utilizing a categorical predictor\n\nWhat if we just use location to predict afternoon temperatures? It's an important factor:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weather_WU, aes(x = temp3pm, fill = location)) +\n  geom_density(color = NA) +\n  scale_fill_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"3 PM temperature\", fill = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nWe can include it as a term in the model:\n\n$$\n\\begin{aligned}\nY_i \\mid \\beta_0, \\beta_1, \\sigma &\\stackrel{\\text{ind}}{\\sim} \\mathcal{N}(\\mu_i, \\sigma^2) \\\\\n\\mu_i &= \\beta_{0c} + \\beta_1 X_{i1} \\\\\n\\\\\n\\beta_{0c} &\\sim \\mathcal{N}(25, 5) \\\\\n\\beta_{1} &\\sim \\mathcal{N}(0, 10) \\\\\n\\sigma &\\sim \\operatorname{Exponential}(1)\n\\end{aligned}\n$$\n\n## Understanding the priors\n\nThese all look reasonable.\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell hash='11-chapter_cache/html/model-location-only-prior-rstanarm_c12ad8027ae0b81dd09032b1340e8675'}\n\n```{.r .cell-code}\nweather_location_only_prior_rstanarm <- stan_glm(\n  temp3pm ~ location,\n  data = weather_WU,\n  family = gaussian,\n  prior_intercept = normal(25, 5),\n  prior = normal(0, 2.5, autoscale = TRUE), \n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0,\n  prior_PD = TRUE\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_WU |> \n  add_predicted_draws(weather_location_only_prior_rstanarm, ndraws = 100) |> \n  ggplot(aes(x = .prediction, group = .draw)) +\n  geom_density(size = 0.25, color = clrs[3]) +\n  labs(x = \"Predicted 3 PM temperature\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell hash='11-chapter_cache/html/model-location-only-prior-brms_e4a9b7875805c14aaf18d052b624d888'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(25, 5), class = Intercept),\n            prior(normal(0, 10), class = b, coef = \"locationWollongong\"),\n            prior(exponential(1), class = sigma))\n\nweather_location_only_prior_brms <- brm(\n  bf(temp3pm ~ location),\n  data = weather_WU,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0,\n  sample_prior = \"only\"\n)\n## Start sampling\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_WU |> \n  add_predicted_draws(weather_location_only_prior_brms, ndraws = 100) |> \n  ggplot(aes(x = .prediction, group = .draw)) +\n  geom_density(size = 0.25, color = clrs[3]) +\n  labs(x = \"Predicted 3 PM temperature\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Simulating the posterior\n\n::: {.panel-tabset}\n### rstanarm\n\n#### Model\n\n\n::: {.cell hash='11-chapter_cache/html/model-location-only-rstanarm_a4b660ad04eac79a5801b3d42aacf538'}\n\n```{.r .cell-code}\nweather_location_only_rstanarm <- stan_glm(\n  temp3pm ~ location,\n  data = weather_WU,\n  family = gaussian,\n  prior_intercept = normal(25, 5),\n  prior = normal(0, 2.5, autoscale = TRUE),\n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(weather_location_only_rstanarm, effects = c(\"fixed\", \"aux\"), \n     conf.int = TRUE, conf.level = 0.8)\n## # A tibble: 4 × 5\n##   term               estimate std.error conf.low conf.high\n##   <chr>                 <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)           29.7      0.548    29.0      30.4 \n## 2 locationWollongong   -10.3      0.777   -11.3      -9.30\n## 3 sigma                  5.48     0.279     5.14      5.86\n## 4 mean_PPD              24.6      0.547    23.9      25.3\n```\n:::\n\n\n#### Coefficient posteriors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_only_rstanarm |> \n  gather_draws(`(Intercept)`, locationWollongong, sigma) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  scale_fill_manual(values = c(clrs[1], clrs[3], clrs[4]), guide = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n#### Posterior predictive check\n\nEw!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_check(weather_location_only_rstanarm, n = 25)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n### brms\n\n#### Model\n\n\n::: {.cell hash='11-chapter_cache/html/model-location-only-brms_8589f0298f6a8202cc48e40013898fcb'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(25, 5), class = Intercept),\n            prior(normal(0, 10), class = b, coef = \"locationWollongong\"),\n            prior(exponential(1), class = sigma))\n\nweather_location_only_brms <- brm(\n  bf(temp3pm ~ location),\n  data = weather_WU,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0\n)\n## Start sampling\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(weather_location_only_brms, conf.int = TRUE, conf.level = 0.8) |> \n  select(-c(effect, component, group))\n## # A tibble: 3 × 5\n##   term               estimate std.error conf.low conf.high\n##   <chr>                 <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)           29.7      0.544    29.0      30.4 \n## 2 locationWollongong   -10.3      0.762   -11.2      -9.29\n## 3 sd__Observation        5.44     0.272     5.10      5.79\n```\n:::\n\n\n#### Coefficient posteriors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_only_brms |> \n  gather_draws(b_Intercept, b_locationWollongong, sigma) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  scale_fill_manual(values = c(clrs[1], clrs[3], clrs[4]), guide = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n#### Posterior predictive check\n\nNot great!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_check(weather_location_only_brms, ndraws = 25)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Posterior prediction\n\nWhat's the predicted afternoon temperature in these two cities?\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_only_rstanarm |> \n  predicted_draws(newdata = tibble(location = c(\"Wollongong\", \"Uluru\"))) |> \n  ggplot(aes(x = .prediction, y = location, fill = location)) +\n  stat_halfeye() +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  labs(x = \"Predicted 3 PM temperature\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_only_brms |> \n  predicted_draws(newdata = tibble(location = c(\"Wollongong\", \"Uluru\"))) |> \n  ggplot(aes(x = .prediction, y = location, fill = location)) +\n  stat_halfeye() +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  labs(x = \"Predicted 3 PM temperature\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n# 11.2: Utilizing two predictors\n\nThere's a recognizable cluster in the data here: location. Wollongong has lower afternoon temperatures than Uluru. That makes sense—Wollongong is a coastal city near Sydney and Uluru is right in the middle of Australia in the desert.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weather_WU, aes(x = temp9am, y = temp3pm, color = location)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM temperature\", y = \"3 PM temperature\", color = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nSince location is binary, including it as a covariate will shift the intercept up and down\n\n$$\n\\begin{aligned}\nY_i \\mid \\beta_0, \\beta_1, \\beta_2, \\sigma &\\stackrel{\\text{ind}}{\\sim} \\mathcal{N}(\\mu_i, \\sigma^2) \\\\\n\\mu_i &= \\beta_{0c} + \\beta_1 X_{i1} + \\beta_2 X_{i2} \\\\\n\\\\\n\\beta_{0c} &\\sim \\mathcal{N}(25, 5) \\\\\n\\beta_{1} &\\sim \\mathcal{N}(0, 2.5) \\\\\n\\beta_{2} &\\sim \\mathcal{N}(0, 10) \\\\\n\\sigma &\\sim \\operatorname{Exponential}(1)\n\\end{aligned}\n$$\n\n## Understanding the priors\n\nThese all look reasonable.\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell hash='11-chapter_cache/html/model-location-prior-rstanarm_a4432aea61ff242aeec2f80236270008'}\n\n```{.r .cell-code}\nweather_location_prior_rstanarm <- stan_glm(\n  temp3pm ~ temp9am + location,\n  data = weather_WU,\n  family = gaussian,\n  prior_intercept = normal(25, 5),\n  prior = normal(0, 2.5, autoscale = TRUE),\n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0,\n  prior_PD = TRUE\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- weather_WU |> \n  add_predicted_draws(weather_location_prior_rstanarm, ndraws = 100) |> \n  ggplot(aes(x = .prediction, group = .draw)) +\n  geom_density(size = 0.25, color = clrs[3]) +\n  labs(x = \"Predicted 3 PM temperature\", y = \"Density\")\n\n# Feed add_epred_draws() brand new data instead of the original data, just for fun\nprior_draws_rstanarm <- weather_WU |> \n  group_by(location) |> \n  summarize(min = min(temp9am),\n            max = max(temp9am)) |> \n  mutate(temp9am = map2(min, max, ~seq(.x, .y, 1))) |> \n  unnest(temp9am) |> \n  add_epred_draws(weather_location_prior_rstanarm, ndraws = 100)\n\np2 <- prior_draws_rstanarm |> \n  ggplot(aes(x = temp9am, y = .epred)) +\n  geom_line(aes(group = paste(location, .draw), color = location), alpha = 0.2) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM temperature\", y = \"3 PM temperature\", color = NULL) +\n  theme(legend.position = \"bottom\")\n\np1 | p2\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-16-1.png){width=768}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell hash='11-chapter_cache/html/model-location-prior-brms_e071c987121d751924b263a360b4ed40'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(25, 5), class = Intercept),\n            prior(normal(0, 2.5), class = b, coef = \"temp9am_c\"),\n            prior(normal(0, 10), class = b, coef = \"locationWollongong\"),\n            prior(exponential(1), class = sigma))\n\nweather_location_prior_brms <- brm(\n  bf(temp3pm ~ temp9am_c + location),\n  data = weather_WU,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0,\n  sample_prior = \"only\"\n)\n## Start sampling\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- weather_WU |> \n  add_predicted_draws(weather_location_prior_brms, ndraws = 100) |> \n  ggplot(aes(x = .prediction, group = .draw)) +\n  geom_density(size = 0.25, color = clrs[3]) +\n  labs(x = \"Predicted 3 PM temperature\", y = \"Density\")\n\n# Feed add_epred_draws() brand new data instead of the original data, just for fun\nprior_draws_brms <- weather_WU |> \n  group_by(location) |> \n  summarize(min = min(temp9am_c),\n            max = max(temp9am_c)) |> \n  mutate(temp9am_c = map2(min, max, ~seq(.x, .y, 1))) |> \n  unnest(temp9am_c) |> \n  add_epred_draws(weather_location_prior_brms, ndraws = 100) |> \n  mutate(temp9am = temp9am_c + unscaled$temp9am_centered$scaled_center)\n\np2 <- prior_draws_brms |> \n  ggplot(aes(x = temp9am, y = .epred)) +\n  geom_line(aes(group = paste(location, .draw), color = location), alpha = 0.2) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM temperature\", y = \"3 PM temperature\", color = NULL) +\n  theme(legend.position = \"bottom\")\n\np1 | p2\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-17-1.png){width=768}\n:::\n:::\n\n\n:::\n\n## Simulating the posterior\n\n::: {.panel-tabset}\n### rstanarm\n\n#### Model\n\n\n::: {.cell hash='11-chapter_cache/html/model-location-rstanarm_614cd28f26eecc58c29417c7392f3772'}\n\n```{.r .cell-code}\nweather_location_rstanarm <- stan_glm(\n  temp3pm ~ temp9am + location,\n  data = weather_WU,\n  family = gaussian,\n  prior_intercept = normal(25, 5),\n  prior = normal(0, 2.5, autoscale = TRUE),\n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(weather_location_rstanarm, effects = c(\"fixed\", \"aux\"), \n     conf.int = TRUE, conf.level = 0.8)\n## # A tibble: 5 × 5\n##   term               estimate std.error conf.low conf.high\n##   <chr>                 <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)          11.3      0.671    10.5      12.2  \n## 2 temp9am               0.857    0.0291    0.820     0.895\n## 3 locationWollongong   -7.06     0.355    -7.51     -6.60 \n## 4 sigma                 2.38     0.121     2.23      2.54 \n## 5 mean_PPD             24.6      0.236    24.3      24.9\n```\n:::\n\n\n#### Coefficient posteriors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_rstanarm |> \n  gather_draws(`(Intercept)`, temp9am, locationWollongong, sigma) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  scale_fill_manual(values = c(clrs[1], clrs[3], clrs[4], clrs[5]), guide = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n#### Fitted draws\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_WU |> \n  add_linpred_draws(weather_location_rstanarm, ndraws = 100) |> \n  ggplot(aes(x = temp9am, y = temp3pm, color = location)) +\n  geom_point(data = weather_WU, size = 0.5) +\n  geom_line(aes(y = .linpred, group = paste(location, .draw)), alpha = 0.2, size = 0.5) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM temperature\", y = \"3 PM temperature\", color = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n#### Posterior predictive check\n\nMuch better!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_check(weather_location_rstanarm, n = 25)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n### brms\n\n#### Model\n\n\n::: {.cell hash='11-chapter_cache/html/model-location-brms_6a5a39575d6807a7fdd3338ff8f9af79'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(25, 5), class = Intercept),\n            prior(normal(0, 2.5), class = b, coef = \"temp9am_c\"),\n            prior(normal(0, 10), class = b, coef = \"locationWollongong\"),\n            prior(exponential(1), class = sigma))\n\nweather_location_brms <- brm(\n  bf(temp3pm ~ temp9am_c + location),\n  data = weather_WU,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0\n)\n## Start sampling\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(weather_location_brms, conf.int = TRUE, conf.level = 0.8) |> \n  select(-c(effect, component, group))\n## Warning in tidy.brmsfit(weather_location_brms, conf.int = TRUE, conf.level =\n## 0.8): some parameter names contain underscores: term naming may be unreliable!\n## # A tibble: 4 × 5\n##   term               estimate std.error conf.low conf.high\n##   <chr>                 <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)          28.1      0.243    27.8      28.4  \n## 2 temp9am_c             0.857    0.0294    0.820     0.895\n## 3 locationWollongong   -7.05     0.355    -7.50     -6.59 \n## 4 sd__Observation       2.37     0.119     2.23      2.53\n```\n:::\n\n\n#### Coefficient posteriors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_brms |> \n  gather_draws(b_Intercept, b_temp9am_c, b_locationWollongong, sigma) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  scale_fill_manual(values = c(clrs[1], clrs[3], clrs[4], clrs[5]), guide = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n#### Fitted draws\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_WU |> \n  add_linpred_draws(weather_location_brms, ndraws = 100) |> \n  ggplot(aes(x = temp9am, y = temp3pm, color = location)) +\n  geom_point(data = weather_WU, size = 0.5) +\n  geom_line(aes(y = .linpred, group = paste(location, .draw)), alpha = 0.2, size = 0.5) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM temperature\", y = \"3 PM temperature\", color = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n#### Posterior predictive check\n\nMuch better!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_check(weather_location_brms, ndraws = 25)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Posterior prediction\n\nWhat if it's 10˚ at 9 AM in both cities? What's the predicted afternoon temperature?\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_rstanarm |> \n  predicted_draws(newdata = expand_grid(temp9am = 10, \n                                        location = c(\"Wollongong\", \"Uluru\"))) |> \n  ggplot(aes(x = .prediction, y = location, fill = location)) +\n  stat_halfeye() +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  labs(x = \"Predicted 3 PM temperature\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_brms |> \n  predicted_draws(newdata = expand_grid(temp9am_c = 10 - unscaled$temp9am_centered$scaled_center, \n                                        location = c(\"Wollongong\", \"Uluru\"))) |> \n  ggplot(aes(x = .prediction, y = location, fill = location)) +\n  stat_halfeye() +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  labs(x = \"Predicted 3 PM temperature\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n# 11.3: Utilizing interaction terms\n\nUsing location as an indicator variable made sense for 9 AM temperatures—the relationship was the same in both locations, but one was just shifted up compared to the other. But that's not always the case! Here's 9 AM humidity. It's wildly different across the two locations (again because Uluru is in the middle of the desert and Wollongong is on the coast).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weather_WU, aes(x = humidity9am, y = temp3pm, color = location)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM humidity\", y = \"3 PM temperature\", color = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\nWe can estimate a different slope for Wollongong by including an interaction term, which makes the model a little more complicated:\n\n$$\n\\begin{aligned}\nY_i \\mid \\beta_0, \\beta_1, \\beta_2, \\beta_3, \\sigma &\\stackrel{\\text{ind}}{\\sim} \\mathcal{N}(\\mu_i, \\sigma^2) \\\\\n\\mu_i &= \\beta_{0c} + \\beta_1 X_{i1} + \\beta_2 X_{i2} + \\beta_3 (X_{i1} \\times X_{i2}) \\\\\n\\\\\n\\beta_{0c} &\\sim \\mathcal{N}(25, 5) \\\\\n\\beta_{1} &\\sim \\mathcal{N}(0, 2.5) \\\\\n\\beta_{2} &\\sim \\mathcal{N}(0, 10) \\\\\n\\beta_{3} &\\sim \\mathcal{N}(0, 2.5) \\\\\n\\sigma &\\sim \\operatorname{Exponential}(1)\n\\end{aligned}\n$$\n\n## Understanding the priors\n\nThese look fine I guess. Though only really for the autoscaled rstanarm priors. The super vague brms priors lead to some wild predictions. \n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell hash='11-chapter_cache/html/model-interaction-prior-rstanarm_2d8c275ac483af609105a138aed0f778'}\n\n```{.r .cell-code}\nweather_interaction_prior_rstanarm <- stan_glm(\n  temp3pm ~ humidity9am + location + humidity9am:location,\n  data = weather_WU,\n  family = gaussian,\n  prior_intercept = normal(25, 5),\n  prior = normal(0, 2.5, autoscale = TRUE),\n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0,\n  prior_PD = TRUE\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- weather_WU |> \n  add_predicted_draws(weather_interaction_prior_rstanarm, ndraws = 100) |> \n  ggplot(aes(x = .prediction, group = .draw)) +\n  geom_density(size = 0.25, color = clrs[3]) +\n  labs(x = \"Predicted 3 PM temperature\", y = \"Density\")\n\n# Feed add_epred_draws() brand new data instead of the original data, just for fun\nprior_draws_rstanarm <- weather_WU |> \n  group_by(location) |> \n  summarize(min = min(humidity9am),\n            max = max(humidity9am)) |> \n  mutate(humidity9am = map2(min, max, ~seq(.x, .y, 1))) |> \n  unnest(humidity9am) |> \n  add_epred_draws(weather_interaction_prior_rstanarm, ndraws = 100)\n\np2 <- prior_draws_rstanarm |> \n  ggplot(aes(x = humidity9am, y = .epred)) +\n  geom_line(aes(group = paste(location, .draw), color = location), alpha = 0.2) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM humidity\", y = \"3 PM temperature\", color = NULL) +\n  theme(legend.position = \"bottom\")\n\np1 | p2\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-29-1.png){width=768}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell hash='11-chapter_cache/html/model-interaction-prior-brms_a8f19093ea446d90a1c4f8034c5c0aff'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(25, 5), class = Intercept),\n            prior(normal(0, 2.5), class = b, coef = \"humidity9am_c\"),\n            prior(normal(0, 10), class = b, coef = \"locationWollongong\"),\n            prior(normal(0, 2.5), class = b, coef = \"humidity9am_c:locationWollongong\"),\n            prior(exponential(1), class = sigma))\n\nweather_interaction_prior_brms <- brm(\n  bf(temp3pm ~ humidity9am_c + location + humidity9am_c:location),\n  data = weather_WU,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0,\n  sample_prior = \"only\"\n)\n## Start sampling\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- weather_WU |> \n  add_predicted_draws(weather_interaction_prior_brms, ndraws = 100) |> \n  ggplot(aes(x = .prediction, group = .draw)) +\n  geom_density(size = 0.25, color = clrs[3]) +\n  labs(x = \"Predicted 3 PM temperature\", y = \"Density\")\n\n# Feed add_epred_draws() brand new data instead of the original data, just for fun\nprior_draws_brms <- weather_WU |> \n  group_by(location) |> \n  summarize(min = min(humidity9am_c),\n            max = max(humidity9am_c)) |> \n  mutate(humidity9am_c = map2(min, max, ~seq(.x, .y, 1))) |> \n  unnest(humidity9am_c) |> \n  add_epred_draws(weather_interaction_prior_brms, ndraws = 100) |> \n  mutate(humidity_9am = humidity9am_c + unscaled$humidity9am_centered$scaled_center)\n\np2 <- prior_draws_brms |> \n  ggplot(aes(x = humidity_9am, y = .epred)) +\n  geom_line(aes(group = paste(location, .draw), color = location), alpha = 0.2) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM humidity\", y = \"3 PM temperature\", color = NULL) +\n  theme(legend.position = \"bottom\")\n\np1 | p2\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-30-1.png){width=768}\n:::\n:::\n\n\n:::\n\n## Simulating the posterior\n\n::: {.panel-tabset}\n### rstanarm\n\n#### Model\n\n\n::: {.cell hash='11-chapter_cache/html/model-interaction-rstanarm_7b95b671ec3c3d51515b2690f26e492d'}\n\n```{.r .cell-code}\nweather_interaction_rstanarm <- stan_glm(\n  temp3pm ~ humidity9am + location + humidity9am:location,\n  data = weather_WU,\n  family = gaussian,\n  prior_intercept = normal(25, 5),\n  prior = normal(0, 2.5, autoscale = TRUE),\n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(weather_interaction_rstanarm, effects = c(\"fixed\", \"aux\"), \n     conf.int = TRUE, conf.level = 0.8)\n## # A tibble: 6 × 5\n##   term                           estimate std.error conf.low conf.high\n##   <chr>                             <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)                      37.6      0.905    36.4      38.8  \n## 2 humidity9am                      -0.189    0.0190   -0.214    -0.165\n## 3 locationWollongong              -21.8      2.34    -24.8     -18.9  \n## 4 humidity9am:locationWollongong    0.245    0.0370    0.198     0.292\n## 5 sigma                             4.47     0.228     4.19      4.77 \n## 6 mean_PPD                         24.6      0.449    24.0      25.1\n```\n:::\n\n\n#### Coefficient posteriors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_interaction_rstanarm |> \n  gather_draws(`(Intercept)`, humidity9am, locationWollongong, `humidity9am:locationWollongong`, sigma) |> \n  ungroup() |> \n  mutate(.variable = fct_relevel(factor(.variable), \n                                 c(\"(Intercept)\", \"humidity9am\", \"locationWollongong\",\n                                   \"humidity9am:locationWollongong\", \"sigma\"))) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  scale_fill_manual(values = c(clrs[1], clrs[3], clrs[4], clrs[2], clrs[5]), guide = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n#### Fitted draws\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_WU |> \n  add_linpred_draws(weather_interaction_rstanarm, ndraws = 100) |> \n  ggplot(aes(x = humidity9am, y = temp3pm, color = location)) +\n  geom_point(data = weather_WU, size = 0.5) +\n  geom_line(aes(y = .linpred, group = paste(location, .draw)), alpha = 0.2, size = 0.5) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM humidity\", y = \"3 PM temperature\", color = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n#### Posterior predictive check\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_check(weather_interaction_rstanarm, n = 25)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n\n### brms\n\n#### Model\n\n\n::: {.cell hash='11-chapter_cache/html/model-interaction-brms_af59b3598d6fa2eb3753991a27844451'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(25, 5), class = Intercept),\n            prior(normal(0, 2.5), class = b, coef = \"humidity9am_c\"),\n            prior(normal(0, 10), class = b, coef = \"locationWollongong\"),\n            prior(normal(0, 2.5), class = b, coef = \"humidity9am_c:locationWollongong\"),\n            prior(exponential(1), class = sigma))\n\nweather_interaction_brms <- brm(\n  bf(temp3pm ~ humidity9am_c + location + humidity9am_c:location),\n  data = weather_WU,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0\n)\n## Start sampling\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(weather_interaction_brms, conf.int = TRUE, conf.level = 0.8) |> \n  select(-c(effect, component, group))\n## Warning in tidy.brmsfit(weather_interaction_brms, conf.int = TRUE, conf.level =\n## 0.8): some parameter names contain underscores: term naming may be unreliable!\n## # A tibble: 5 × 5\n##   term                             estimate std.error conf.low conf.high\n##   <chr>                               <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)                        27.4      0.496    26.8      28.0  \n## 2 humidity9am_c                      -0.191    0.0190   -0.215    -0.166\n## 3 locationWollongong                 -8.68     0.772    -9.67     -7.70 \n## 4 humidity9am_c:locationWollongong    0.247    0.0370    0.200     0.295\n## 5 sd__Observation                     4.43     0.222     4.15      4.72\n```\n:::\n\n\n#### Coefficient posteriors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_interaction_brms |> \n  gather_draws(b_Intercept, b_humidity9am_c, b_locationWollongong, \n               `b_humidity9am_c:locationWollongong`, sigma) |> \n  ungroup() |> \n  mutate(.variable = fct_relevel(factor(.variable), \n                                 c(\"b_Intercept\", \"b_humidity9am_c\", \"b_locationWollongong\", \n                                   \"b_humidity9am_c:locationWollongong\", \"sigma\"))) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  scale_fill_manual(values = c(clrs[1], clrs[3], clrs[4], clrs[2], clrs[5]), guide = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n#### Fitted draws\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_WU |> \n  add_linpred_draws(weather_interaction_brms, ndraws = 100) |> \n  ggplot(aes(x = humidity9am, y = temp3pm, color = location)) +\n  geom_point(data = weather_WU, size = 0.5) +\n  geom_line(aes(y = .linpred, group = paste(location, .draw)), alpha = 0.2, size = 0.5) +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  labs(x = \"9 AM humidity\", y = \"3 PM temperature\", color = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n#### Posterior predictive check\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_check(weather_interaction_brms, ndraws = 25)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Posterior prediction\n\nWhat if there's 50% humidity at 9 AM in both cities? What's the predicted afternoon temperature?\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_interaction_rstanarm |> \n  predicted_draws(newdata = expand_grid(humidity9am = 50, \n                                        location = c(\"Wollongong\", \"Uluru\"))) |> \n  ggplot(aes(x = .prediction, y = location, fill = location)) +\n  stat_halfeye() +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  labs(x = \"Predicted 3 PM temperature\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_interaction_brms |> \n  predicted_draws(newdata = expand_grid(humidity9am_c = 50 - unscaled$humidity9am_centered$scaled_center, \n                                        location = c(\"Wollongong\", \"Uluru\"))) |> \n  ggplot(aes(x = .prediction, y = location, fill = location)) +\n  stat_halfeye() +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  labs(x = \"Predicted 3 PM temperature\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n# 11.4: Utilizing more than 2 predictors\n\nLet's go wild and use everything! \n\n$$\n\\begin{aligned}\nY_i \\mid \\beta_0, \\beta_1, \\beta_2, \\beta_3, \\beta_4, \\beta_5, \\sigma &\\stackrel{\\text{ind}}{\\sim} \\mathcal{N}(\\mu_i, \\sigma^2) \\\\\n\\mu_i &= \\beta_{0c} + \\beta_1 X_{i1} + \\beta_2 X_{i2} + \\beta_3 X_{i3} + \\beta_4 X_{i4} + \\beta_5 X_{i5}\\\\\n\\\\\n\\beta_{0c} &\\sim \\mathcal{N}(25, 5) \\\\\n\\beta_{1} \\dots \\beta_5 &\\sim \\mathcal{N}(0, 2.5) \\\\\n\\sigma &\\sim \\operatorname{Exponential}(1)\n\\end{aligned}\n$$\n\n## Understanding the priors\n\nThese look fine to me. brms priors could be better, but whatever.\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell hash='11-chapter_cache/html/model-full-prior-rstanarm_c67c2968aa7a5595b73699734715cbda'}\n\n```{.r .cell-code}\nweather_full_prior_rstanarm <- stan_glm(\n  temp3pm ~ temp9am + humidity9am + windspeed9am + pressure9am + location,\n  data = weather_WU,\n  family = gaussian,\n  prior_intercept = normal(25, 5),\n  prior = normal(0, 2.5, autoscale = TRUE),\n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0,\n  prior_PD = TRUE\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_WU |> \n  add_predicted_draws(weather_full_prior_rstanarm, ndraws = 100) |> \n  ggplot(aes(x = .prediction, group = .draw)) +\n  geom_density(size = 0.25, color = clrs[3]) +\n  labs(x = \"Predicted 3 PM temperature\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell hash='11-chapter_cache/html/model-full-prior-brms_f570306887d378e51c939b1a22fcf42d'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(25, 5), class = Intercept),\n            prior(normal(0, 2.5), class = b),\n            prior(exponential(1), class = sigma))\n\nweather_full_prior_brms <- brm(\n  bf(temp3pm ~ temp9am_c + humidity9am_c + windspeed9am_c + pressure9am_c + location),\n  data = weather_WU,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0,\n  sample_prior = \"only\"\n)\n## Start sampling\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_WU |> \n  add_predicted_draws(weather_full_prior_brms, ndraws = 100) |> \n  ggplot(aes(x = .prediction, group = .draw)) +\n  geom_density(size = 0.25, color = clrs[3]) +\n  labs(x = \"Predicted 3 PM temperature\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Simulating the posterior\n\n::: {.panel-tabset}\n### rstanarm\n\n#### Model\n\n\n::: {.cell hash='11-chapter_cache/html/model-full-rstanarm_cbbd13728d09d42bd864d58fd197cf20'}\n\n```{.r .cell-code}\nweather_full_rstanarm <- stan_glm(\n  temp3pm ~ temp9am + humidity9am + windspeed9am + pressure9am + location,\n  data = weather_WU,\n  family = gaussian,\n  prior_intercept = normal(25, 5),\n  prior = normal(0, 2.5, autoscale = TRUE),\n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(weather_full_rstanarm, effects = c(\"fixed\", \"aux\"), \n     conf.int = TRUE, conf.level = 0.8)\n## # A tibble: 8 × 5\n##   term               estimate std.error conf.low conf.high\n##   <chr>                 <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)         37.6     30.8      -2.07     76.8   \n## 2 temp9am              0.802    0.0366    0.756     0.850 \n## 3 humidity9am         -0.0338   0.00927  -0.0458   -0.0218\n## 4 windspeed9am        -0.0131   0.0211   -0.0398    0.0142\n## 5 pressure9am         -0.0231   0.0299   -0.0610    0.0154\n## 6 locationWollongong  -6.42     0.388    -6.92     -5.92  \n## 7 sigma                2.32     0.120     2.17      2.48  \n## 8 mean_PPD            24.6      0.233    24.3      24.9\n```\n:::\n\n\n#### Coefficient posteriors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_full_rstanarm |> \n  gather_draws(`(Intercept)`, temp9am, humidity9am, windspeed9am, \n               pressure9am, locationWollongong, sigma) |> \n  ungroup() |> \n  mutate(.variable = fct_relevel(factor(.variable),\n                                 c(\"(Intercept)\", \"temp9am\", \"humidity9am\", \"windspeed9am\", \n                                   \"pressure9am\", \"locationWollongong\", \"sigma\"))) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  guides(fill = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n#### Posterior predictive check\n\nSuper nice now\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_check(weather_full_rstanarm, n = 25)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n\n### brms\n\n#### Model\n\n\n::: {.cell hash='11-chapter_cache/html/model-full-brms_11e03873aaca89dd711be0f9cb7e8971'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(25, 5), class = Intercept),\n            prior(normal(0, 2.5), class = b),\n            prior(exponential(1), class = sigma))\n\nweather_full_brms <- brm(\n  bf(temp3pm ~ temp9am_c + humidity9am_c + windspeed9am_c + pressure9am_c + location),\n  data = weather_WU,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0\n)\n## Start sampling\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(weather_full_brms, conf.int = TRUE, conf.level = 0.8) |> \n  select(-c(effect, component, group))\n## Warning in tidy.brmsfit(weather_full_brms, conf.int = TRUE, conf.level = 0.8):\n## some parameter names contain underscores: term naming may be unreliable!\n## # A tibble: 7 × 5\n##   term               estimate std.error conf.low conf.high\n##   <chr>                 <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)         27.7      0.255    27.4      28.0   \n## 2 temp9am_c            0.804    0.0364    0.758     0.850 \n## 3 humidity9am_c       -0.0354   0.00919  -0.0471   -0.0237\n## 4 windspeed9am_c      -0.0138   0.0213   -0.0412    0.0136\n## 5 pressure9am_c       -0.0221   0.0299   -0.0604    0.0166\n## 6 locationWollongong  -6.27     0.387    -6.77     -5.77  \n## 7 sd__Observation      2.31     0.117     2.17      2.47\n```\n:::\n\n\n#### Coefficient posteriors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_variables(weather_full_brms)\n##  [1] \"b_Intercept\"          \"b_temp9am_c\"          \"b_humidity9am_c\"     \n##  [4] \"b_windspeed9am_c\"     \"b_pressure9am_c\"      \"b_locationWollongong\"\n##  [7] \"sigma\"                \"Intercept\"            \"lprior\"              \n## [10] \"lp__\"                 \"accept_stat__\"        \"treedepth__\"         \n## [13] \"stepsize__\"           \"divergent__\"          \"n_leapfrog__\"        \n## [16] \"energy__\"\nweather_full_brms |> \n  gather_draws(b_Intercept, b_temp9am_c, b_humidity9am_c, b_windspeed9am_c,\n               b_pressure9am_c, b_locationWollongong, sigma) |> \n  ungroup() |> \n  mutate(.variable = fct_relevel(factor(.variable), \n                                 c(\"b_Intercept\", \"b_temp9am_c\", \"b_humidity9am_c\", \"b_windspeed9am_c\",\n                                   \"b_pressure9am_c\", \"b_locationWollongong\", \"sigma\"))) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  guides(fill = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\n#### Posterior predictive check\n\nDelightful.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_check(weather_full_brms, ndraws = 25)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Posterior prediction\n\nWhat if there's 50% humidity, 10 MPH of wind, pressure of 1015, and temperature of 10˚ at 9 AM in both cities? What's the predicted afternoon temperature?\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_full_rstanarm |> \n  predicted_draws(newdata = expand_grid(humidity9am = 50, \n                                        windspeed9am = 10,\n                                        pressure9am = 1015,\n                                        temp9am = 10,\n                                        location = c(\"Wollongong\", \"Uluru\"))) |> \n  ggplot(aes(x = .prediction, y = location, fill = location)) +\n  stat_halfeye() +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  labs(x = \"Predicted 3 PM temperature\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_full_brms |> \n  predicted_draws(newdata = expand_grid(humidity9am_c = 50 - unscaled$humidity9am_centered$scaled_center, \n                                        windspeed9am_c = 10 - unscaled$windspeed9am_centered$scaled_center,\n                                        pressure9am_c = 1015 - unscaled$pressure9am_centered$scaled_center,\n                                        temp9am_c = 10 - unscaled$temp9am_centered$scaled_center,\n                                        location = c(\"Wollongong\", \"Uluru\"))) |> \n  ggplot(aes(x = .prediction, y = location, fill = location)) +\n  stat_halfeye() +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  labs(x = \"Predicted 3 PM temperature\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n# 11.5: Model evaluation and comparison\n\nPhew. We have 5 (actually 10) different models predicting afternoon temperature:\n\n+-------------------------------------------------------------------+--------------------------------------------+\n| `weather_simple_rstanarm` and `weather_simple_brms`               |     temp3pm ~ temp9am                      |\n+-------------------------------------------------------------------+--------------------------------------------+\n| `weather_location_only_rstanarm` and `weather_location_only_brms` |     temp3pm ~ location                     |\n+-------------------------------------------------------------------+--------------------------------------------+\n| `weather_location_rstanarm` and `weather_location_brms`           |     temp3pm ~ temp9am + location           |\n+-------------------------------------------------------------------+--------------------------------------------+\n| `weather_interaction_rstanarm` and `weather_interaction_brms`     |     temp3pm ~ temp9am + location +         |\n|                                                                   |               temp9am:location             |\n+-------------------------------------------------------------------+--------------------------------------------+\n| `weather_full_rstanarm` and `weather_full_brms`                   |     temp3pm ~ temp9am + humidity9am +      |\n|                                                                   |               windspeed9am + pressure9am + |\n|                                                                   |               location                     |\n+-------------------------------------------------------------------+--------------------------------------------+\n\n\n## How fair is each model? \n\nThat's fine here. They're all equally fair (and the data was collected through an automated system and seems fair)\n\n## How wrong is each model?\n\nWe can compare all the posterior predictive checks. `y_rep` gets better as the model gets more complex.\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell hash='11-chapter_cache/html/post-predict-rstanarm_d0b9cea63f73a896ede4177f6afa5eff'}\n\n```{.r .cell-code}\nmodels_rstanarm <- tribble(\n  ~model_name, ~model,\n  \"Temperature only\", weather_simple_rstanarm, \n  \"Location only\", weather_location_only_rstanarm, \n  \"Temperature + location\", weather_location_rstanarm, \n  \"Temperature × location\", weather_interaction_rstanarm, \n  \"Full model\", weather_full_rstanarm\n) |> \n  mutate(ppcheck = map2(model, model_name, ~pp_check(.x, n = 25) + labs(title = .y))) |> \n  mutate(loo = map(model, ~loo(.)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrap_plots(models_rstanarm$ppcheck)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-51-1.png){width=768}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell hash='11-chapter_cache/html/post-predict-brms_2fa9b46893cb8232d7ae9543cea17f45'}\n\n```{.r .cell-code}\nmodels_brms <- tribble(\n  ~model_name, ~model,\n  \"Temperature only\", weather_simple_brms, \n  \"Location only\", weather_location_only_brms, \n  \"Temperature + location\", weather_location_brms, \n  \"Temperature × location\", weather_interaction_brms, \n  \"Full model\", weather_full_brms\n) |> \n  mutate(ppcheck = map2(model, model_name, ~pp_check(.x, ndraws = 25) + labs(title = .y))) |> \n  mutate(loo = map(model, ~loo(.)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrap_plots(models_brms$ppcheck)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-52-1.png){width=768}\n:::\n:::\n\n\n:::\n\n## How accurate are each model's predictions?\n\nWe can check these with the 3 approaches from chapter 10.\n\n### Visualization\n\nFor the models with fewer dimensions we can visualize their predictions, like with the location-only model and the model with the interaction\n\n::: {.panel-tabset}\n#### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_only_rstanarm |> \n  add_predicted_draws(newdata = weather_WU, ndraws = 100) |> \n  ggplot(aes(x = location)) +\n  stat_dotsinterval(aes(y = .prediction, color = location, fill = location), \n                    quantiles = 300, side = \"right\", slab_size = 0, scale = 0.4) +\n  stat_dotsinterval(aes(y = temp3pm, fill = location),\n                    side = \"left\", quantiles = 100, slab_size = 0, slab_shape = 23) +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  guides(color = \"none\") +\n  labs(title = \"Actual data on left; predictions on right\",\n       y = \"Predicted afternoon temperature\", x = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n:::\n\n\n#### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_location_only_brms |> \n  add_predicted_draws(newdata = weather_WU, ndraws = 100) |> \n  ggplot(aes(x = location)) +\n  stat_dotsinterval(aes(y = .prediction, color = location, fill = location), \n                    quantiles = 300, side = \"right\", slab_size = 0, scale = 0.4) +\n  stat_dotsinterval(aes(y = temp3pm, fill = location),\n                    side = \"left\", quantiles = 100, slab_size = 0, slab_shape = 23) +\n  scale_fill_manual(values = c(clrs[2], clrs[1]), guide = \"none\") +\n  guides(color = \"none\") +\n  labs(title = \"Actual data on left; predictions on right\",\n       y = \"Predicted afternoon temperature\", x = NULL)\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n:::\n\n::: {.panel-tabset}\n#### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_interaction_rstanarm |> \n  add_predicted_draws(newdata = weather_WU, ndraws = 100) |> \n  ggplot(aes(x = temp9am)) +\n  stat_interval(aes(y = .prediction, color = location, color_ramp = stat(level)), alpha = 0.25,\n                .width = c(0.5, 0.89, 0.95)) +\n  geom_point(aes(y = temp3pm, fill = location), size = 2, pch = 21, color = \"white\") +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  scale_fill_manual(values = c(clrs[2], clrs[1]))\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\n#### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_interaction_brms |> \n  add_predicted_draws(newdata = weather_WU, ndraws = 100) |> \n  ggplot(aes(x = temp9am)) +\n  stat_interval(aes(y = .prediction, color = location, color_ramp = stat(level)), alpha = 0.25,\n                .width = c(0.5, 0.89, 0.95)) +\n  geom_point(aes(y = temp3pm, fill = location), size = 2, pch = 21, color = \"white\") +\n  scale_color_manual(values = c(clrs[2], clrs[1])) +\n  scale_fill_manual(values = c(clrs[2], clrs[1]))\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-56-1.png){width=672}\n:::\n:::\n\n:::\n\nWe can't visualize the predictions from the full model without holding a bunch of stuff constant, though. So we use numbers instead!\n\n### Cross validation\n\nWe could run k-fold cross validation here, but we'd need to run 100 different Stan models (10 folds for each of the 10 models) and I don't want to do that. The book has results from the rstanarm models. It shows that the smaller `temp9am + location` model is the most efficient of the bunch.\n\n### ELPD\n\nThe full model and temperature + location models have the highest ELPD, but they're not significantly different from each other, so they perform about the same. The Bayes Rules! authors conclude:\n\n> Again, since [the temperature + location model] is simpler and achieves similar predictive accuracy, we’d personally choose to use it over the more complicated [full model].\n\n::: {.panel-tabset}\n#### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloo_rstanarm <- models_rstanarm |> \n  mutate(loo_stuff = map(loo, ~as_tibble(.$estimates, rownames = \"statistic\"))) |> \n  select(model_name, loo_stuff) |> \n  unnest(loo_stuff) |> \n  filter(statistic == \"elpd_loo\") |> \n  arrange(desc(Estimate))\nloo_rstanarm\n## # A tibble: 5 × 4\n##   model_name             statistic Estimate    SE\n##   <chr>                  <chr>        <dbl> <dbl>\n## 1 Full model             elpd_loo     -458. 22.0 \n## 2 Temperature + location elpd_loo     -461. 23.0 \n## 3 Temperature only       elpd_loo     -568.  8.57\n## 4 Temperature × location elpd_loo     -585.  9.99\n## 5 Location only          elpd_loo     -626.  9.52\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nloo_rstanarm |> \n  mutate(model_name = fct_rev(fct_inorder(model_name))) |> \n  ggplot(aes(x = Estimate, y = model_name)) +\n  geom_pointrange(aes(xmin = Estimate - 2 * SE, xmax = Estimate + 2 * SE))\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels_rstanarm |> \n  pull(loo) |> \n  set_names(models_rstanarm$model_name) |> \n  loo_compare()\n##                        elpd_diff se_diff\n## Full model                0.0       0.0 \n## Temperature + location   -3.6       4.0 \n## Temperature only       -110.9      18.1 \n## Temperature × location -127.9      22.7 \n## Location only          -168.2      21.5\n```\n:::\n\n\n#### brms\n\n::: {.cell}\n\n```{.r .cell-code}\nloo_brms <- models_brms |> \n  mutate(loo_stuff = map(loo, ~as_tibble(.$estimates, rownames = \"statistic\"))) |> \n  select(model_name, loo_stuff) |> \n  unnest(loo_stuff) |> \n  filter(statistic == \"elpd_loo\") |> \n  arrange(desc(Estimate))\nloo_brms\n## # A tibble: 5 × 4\n##   model_name             statistic Estimate    SE\n##   <chr>                  <chr>        <dbl> <dbl>\n## 1 Full model             elpd_loo     -458. 22.0 \n## 2 Temperature + location elpd_loo     -461. 23.2 \n## 3 Temperature only       elpd_loo     -568.  8.74\n## 4 Temperature × location elpd_loo     -585. 10.2 \n## 5 Location only          elpd_loo     -626.  9.71\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nloo_brms |> \n  mutate(model_name = fct_rev(fct_inorder(model_name))) |> \n  ggplot(aes(x = Estimate, y = model_name)) +\n  geom_pointrange(aes(xmin = Estimate - 2 * SE, xmax = Estimate + 2 * SE))\n```\n\n::: {.cell-output-display}\n![](11-chapter_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels_brms |> \n  pull(loo) |> \n  set_names(models_brms$model_name) |> \n  loo_compare()\n##                        elpd_diff se_diff\n## Full model                0.0       0.0 \n## Temperature + location   -3.6       4.4 \n## Temperature only       -110.9      17.9 \n## Temperature × location -127.9      22.7 \n## Location only          -168.2      21.6\n```\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}