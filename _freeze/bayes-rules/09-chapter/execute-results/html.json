{
  "hash": "f0a1d4dfc09e8d3cd8b64a6a1061d2c8",
  "result": {
    "markdown": "---\ntitle: \"Reading notes\"\nsubtitle: \"Simple normal regression\"\ndate: \"October 4, 2022\"\n---\n\n\n[(Original chapter)](https://www.bayesrulesbook.com/chapter-9.html)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bayesrules)\nlibrary(tidyverse)\nlibrary(brms)\nlibrary(cmdstanr)\nlibrary(rstanarm)\nlibrary(broom.mixed)\nlibrary(tidybayes)\nlibrary(ggdist)\nlibrary(patchwork)\nlibrary(ggtext)\n\n# Plot stuff\nclrs <- MetBrewer::met.brewer(\"Lakota\", 6)\ntheme_set(theme_bw())\n\n# Seed stuff\nset.seed(1234)\nBAYES_SEED <- 1234\n\ndata(bikes, package = \"bayesrules\")\n\nbikes <- bikes |> \n  mutate(temp_feel_centered = scale(temp_feel, scale = FALSE),\n         temp_feel_c = as.numeric(temp_feel_centered))\n\ntemp_details <- attributes(bikes$temp_feel_centered) %>%\n  set_names(janitor::make_clean_names(names(.)))\n```\n:::\n\n\n# 9.2: Tuning prior models for regression parameters\n\nWe want to estimate the effect of temperature on bike share ridership. We need to estimate three parameters: \n\n1. $\\beta_0$, or the intercept. From prior research, we know:\n\n  > On an average temperature day, say 65 or 70 degrees for D.C., there are typically around 5000 riders, though this average could be somewhere between 3000 and 7000.\n\n2. $\\beta_1$, or the slope. From prior research, we know:\n\n  > For every one degree increase in temperature, ridership typically increases by 100 rides, though this average increase could be as low as 20 or as high as 180.\n\n3. $\\sigma$, or the variation in ridership. From prior research, we know:\n\n  > At any given temperature, daily ridership will tend to vary with a moderate standard deviation of 1250 rides.\n\nThe intercept there is centered at 5000 riders.\n\nThat gives us these priors:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot() +\n  geom_function(fun = ~dnorm(., 5000, 1000), size = 1, color = clrs[1]) +\n  xlim(c(1000, 9000)) +\n  labs(x = \"**β<sub>0c</sub>**<br>Average daily ridership, centered\") +\n  theme(axis.title.x = element_markdown())\n\np2 <- ggplot() +\n  geom_function(fun = ~dnorm(., 100, 40), size = 1, color = clrs[3]) +\n  xlim(c(-50, 250)) +\n  labs(x = \"**β<sub>1</sub>**<br>Effect of temperature on ridership\") +\n  theme(axis.title.x = element_markdown())\n\np3 <- ggplot() +\n  geom_function(fun = ~dexp(., 1 / 1250), size = 1, color = clrs[4]) +\n  xlim(c(0, 7000)) +\n  labs(x = \"**σ**<br>Variation in daily ridership\") +\n  theme(axis.title.x = element_markdown())\n\np1 | p2 | p3\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-2-1.png){width=864}\n:::\n:::\n\n\nMore formally, we can write out the whole model like this:\n\n$$\n\\begin{aligned}\nY_i &\\sim \\mathcal{N}(\\mu_i, \\sigma) \\text{, or}  & \\text{[McElreath's syntax]} \\\\\nY_i \\mid \\beta_0, \\beta_1, \\sigma &\\stackrel{\\text{ind}}{\\sim} \\mathcal{N}(\\mu_i, \\sigma^2) & \\text{[Bayes Rules!'s syntax]}\n\\\\\n\\mu_i &= \\beta_{0c} + \\beta_1 X_i \\\\\n\\\\\n\\beta_{0c} &\\sim \\mathcal{N}(5000, 1000) \\\\\n\\beta_{1} &\\sim \\mathcal{N}(100, 40) \\\\\n\\sigma &\\sim \\operatorname{Exponential}(1 / 1250)\n\\end{aligned}\n$$\n\nWe can simulate from all these priors to see how reasonable they are, McElreath-style. In *Bayes Rules!* they show a picture of this but not the code to make it. I'll use brms bc it's easy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npriors <- c(prior(normal(5000, 1000), class = Intercept),\n            prior(normal(100, 40), class = b, coef = \"temp_feel_c\"),\n            prior(exponential(0.0008), class = sigma))\n\nbike_prior_only <- brm(\n  bf(rides ~ temp_feel_c),\n  data = bikes,\n  family = gaussian(),\n  prior = priors,\n  sample_prior = \"only\",\n  backend = \"cmdstanr\", cores = 4, seed = BAYES_SEED, refresh = 0\n)\n## Start sampling\n```\n:::\n\n\nThese lines all look reasonable, yay.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraws_prior <- tibble(temp_feel_c = seq(45 - temp_details$scaled_center, \n                                        90 - temp_details$scaled_center, \n                                        1)) |> \n  add_epred_draws(bike_prior_only, ndraws = 200) |> \n  mutate(unscaled = temp_feel_c + temp_details$scaled_center)\n\ndraws_prior |> \n  ggplot(aes(x = unscaled, y = .epred)) +\n  geom_line(aes(group = .draw), alpha = 0.2) +\n  labs(x = \"Temperature\", y = \"Number of rides\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n# 9.3: Posterior simulation\n\n## Run the model\n\n::: {.panel-tabset}\n\n### rstanarm\n\n\n::: {.cell hash='09-chapter_cache/html/model-bike-rstanarm_07545d4d21c5e72259be0f340002ea4f'}\n\n```{.r .cell-code}\nbike_rstanarm <- stan_glm(\n  rides ~ temp_feel_c,\n  data = bikes,\n  family = gaussian(),\n  prior_intercept = normal(5000, 1000),\n  prior = normal(100, 40),\n  prior_aux = exponential(0.0008),\n  chains = 4, iter = 5000*2, seed = 84735, refresh = 0\n)\n```\n:::\n\n\n\n### brms\n\n\n::: {.cell hash='09-chapter_cache/html/model-bike-brms_62634eb9f2e0e2eac06c178c7f82f3a1'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(5000, 1000), class = Intercept),\n            prior(normal(100, 40), class = b, coef = \"temp_feel_c\"),\n            prior(exponential(0.0008), class = sigma))\n\nbike_brms <- brm(\n  bf(rides ~ temp_feel_c),\n  data = bikes,\n  family = gaussian(),\n  prior = priors,\n  chains = 4, iter = 5000*2, seed = BAYES_SEED, \n  backend = \"cmdstanr\", refresh = 0\n)\n## Start sampling\n```\n:::\n\n\n\n### Stan\n\n\n::: {.cell file='09-stan/bike-simple.stan' output.var='' filename='09-stan/bike-simple.stan'}\n\n```{.stan .cell-code}\ndata {\n  int<lower = 0> n;\n  vector[n] Y;\n  vector[n] X;\n}\n\n/*\n// We could also center things here and then use it in mu below:\n// mu = beta0 + beta1 * X_centered;\n// See https://mc-stan.org/docs/stan-users-guide/standardizing-predictors-and-outputs.html\ntransformed data {\n  vector[n] X_centered;\n  \n  X_centered = X - mean(X);\n}\n*/\n\nparameters {\n  real beta0;\n  real beta1;\n  real<lower = 0> sigma;\n}\n\ntransformed parameters {\n  vector[n] mu;\n  mu = beta0 + beta1 * X;\n}\n\nmodel {\n  Y ~ normal(mu, sigma);\n  \n  beta0 ~ normal(5000, 1000);\n  beta1 ~ normal(100, 40);\n  sigma ~ exponential(0.0008);\n}\n\ngenerated quantities {\n  vector[n] Y_rep;\n  \n  for (i in 1:n) {\n    Y_rep[i] = normal_rng(mu[i], sigma);\n  }\n}\n```\n:::\n\n::: {.cell hash='09-chapter_cache/html/compile-bike-model_05e8f96ab71d101de2d5293f67dff8dc'}\n\n```{.r .cell-code}\nbike_stan <- cmdstan_model(\"09-stan/bike-simple.stan\")\n```\n:::\n\n::: {.cell hash='09-chapter_cache/html/stan-bike-model_d086fd4529fed4891edb092ff9fb5754'}\n\n```{.r .cell-code}\nbike_stan_samples <- bike_stan$sample(\n  data = list(n = nrow(bikes), Y = bikes$rides, X = bikes$temp_feel_c),\n  parallel_chains = 4, iter_warmup = 5000, iter_sampling = 5000, \n  refresh = 0, seed = BAYES_SEED\n)\n## Running MCMC with 4 parallel chains...\n## \n## Chain 3 finished in 2.0 seconds.\n## Chain 4 finished in 2.0 seconds.\n## Chain 1 finished in 2.0 seconds.\n## Chain 2 finished in 2.0 seconds.\n## \n## All 4 chains finished successfully.\n## Mean chain execution time: 2.0 seconds.\n## Total execution time: 2.1 seconds.\n```\n:::\n\n\n:::\n\n## Diagnostics\n\n::: {.panel-tabset}\n\n### rstanarm\n\n#### Effective sample size and R-hat\n\n\n::: {.cell}\n\n```{.r .cell-code}\nneff_ratio(bike_rstanarm)\n## (Intercept) temp_feel_c       sigma \n##     0.96345     0.96075     0.96825\nrhat(bike_rstanarm)\n## (Intercept) temp_feel_c       sigma \n##   0.9998765   0.9999727   1.0000086\n```\n:::\n\n\n#### Trace plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_rstanarm |> \n  gather_draws(`(Intercept)`, temp_feel_c, sigma) |> \n  ungroup() |> \n  mutate(.variable = fct_relevel(factor(.variable), c(\"(Intercept)\", \"temp_feel_c\", \"sigma\"))) |> \n  ggplot(aes(x = .iteration, y = .value, color = as.factor(.chain))) +\n  geom_line(size = 0.05) +\n  labs(color = \"Chain\") +\n  facet_wrap(vars(.variable), scales = \"free_y\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-6-1.png){width=768}\n:::\n:::\n\n\n#### Trank plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_rstanarm |> \n  gather_draws(`(Intercept)`, temp_feel_c, sigma) |> \n  ungroup() |> \n  mutate(.variable = fct_relevel(factor(.variable), c(\"(Intercept)\", \"temp_feel_c\", \"sigma\"))) |> \n  group_by(.variable) |> \n  mutate(draw_rank = rank(.value)) |> \n  ggplot(aes(x = draw_rank)) +\n  stat_bin(aes(color = factor(.chain)), geom = \"step\", binwidth = 1000,\n           position = position_identity(), boundary = 0) +\n  labs(color = \"Chain\") +\n  facet_wrap(vars(.variable)) +\n  theme(legend.position = \"bottom\",\n        axis.text.y = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-7-1.png){width=768}\n:::\n:::\n\n\n#### Density plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_rstanarm |> \n  gather_draws(`(Intercept)`, temp_feel_c, sigma) |> \n  ungroup() |> \n  mutate(.variable = fct_relevel(factor(.variable), c(\"(Intercept)\", \"temp_feel_c\", \"sigma\"))) |> \n  ggplot(aes(x = .value, color = factor(.chain))) +\n  geom_density() +\n  labs(color = \"Chain\") +\n  facet_wrap(vars(.variable), scales = \"free\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-8-1.png){width=768}\n:::\n:::\n\n\n### brms\n\n#### Effective sample size and R-hat\n\n\n::: {.cell}\n\n```{.r .cell-code}\nneff_ratio(bike_brms)\n##   b_Intercept b_temp_feel_c         sigma     Intercept        lprior \n##     1.0579051     1.0534749     1.1040274     1.0579051     1.0473025 \n##          lp__ \n##     0.4827253\nrhat(bike_brms)\n##   b_Intercept b_temp_feel_c         sigma     Intercept        lprior \n##      1.000021      1.000172      1.000024      1.000021      1.000135 \n##          lp__ \n##      1.000185\n```\n:::\n\n\n#### Trace plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_brms |> \n  gather_draws(b_Intercept, b_temp_feel_c, sigma) |> \n  ggplot(aes(x = .iteration, y = .value, color = as.factor(.chain))) +\n  geom_line(size = 0.05) +\n  labs(color = \"Chain\") +\n  facet_wrap(vars(.variable), scales = \"free_y\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-10-1.png){width=768}\n:::\n:::\n\n\n#### Trank plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_brms |> \n  gather_draws(b_Intercept, b_temp_feel_c, sigma) |> \n  group_by(.variable) |> \n  mutate(draw_rank = rank(.value)) |> \n  ggplot(aes(x = draw_rank)) +\n  stat_bin(aes(color = factor(.chain)), geom = \"step\", binwidth = 1000,\n           position = position_identity(), boundary = 0) +\n  labs(color = \"Chain\") +\n  facet_wrap(vars(.variable)) +\n  theme(legend.position = \"bottom\",\n        axis.text.y = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-11-1.png){width=768}\n:::\n:::\n\n\n#### Density plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_brms |> \n  gather_draws(b_Intercept, b_temp_feel_c, sigma) |> \n  ggplot(aes(x = .value, color = factor(.chain))) +\n  geom_density() +\n  labs(color = \"Chain\") +\n  facet_wrap(vars(.variable), scales = \"free\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-12-1.png){width=768}\n:::\n:::\n\n\n### Stan\n\n#### Effective sample size and R-hat\n\n\n::: {.cell}\n\n```{.r .cell-code}\nneff_ratio(bike_stan_samples, pars = c(\"beta0\", \"beta1\", \"sigma\"))\n##    beta0    beta1    sigma \n## 1.077305 1.012467 1.085847\nrhat(bike_stan_samples, pars = c(\"beta0\", \"beta1\", \"sigma\"))\n##     beta0     beta1     sigma \n## 1.0001360 1.0000768 0.9999753\n```\n:::\n\n\n#### Trace plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_stan_samples |> \n  gather_draws(beta0, beta1, sigma) |> \n  ggplot(aes(x = .iteration, y = .value, color = as.factor(.chain))) +\n  geom_line(size = 0.05) +\n  labs(color = \"Chain\") +\n  facet_wrap(vars(.variable), scales = \"free_y\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-14-1.png){width=768}\n:::\n:::\n\n\n#### Trank plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_stan_samples |> \n  gather_draws(beta0, beta1, sigma) |> \n  group_by(.variable) |> \n  mutate(draw_rank = rank(.value)) |> \n  ggplot(aes(x = draw_rank)) +\n  stat_bin(aes(color = factor(.chain)), geom = \"step\", binwidth = 1000,\n           position = position_identity(), boundary = 0) +\n  labs(color = \"Chain\") +\n  facet_wrap(vars(.variable)) +\n  theme(legend.position = \"bottom\",\n        axis.text.y = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-15-1.png){width=768}\n:::\n:::\n\n\n#### Density plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_stan_samples |> \n  gather_draws(beta0, beta1, sigma) |> \n  ggplot(aes(x = .value, color = factor(.chain))) +\n  geom_density() +\n  labs(color = \"Chain\") +\n  facet_wrap(vars(.variable), scales = \"free\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-16-1.png){width=768}\n:::\n:::\n\n\n:::\n\n\n# 9.4: Interpreting the posterior\n\n## Parameter summaries\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(bike_rstanarm, effects = c(\"fixed\", \"aux\"), \n     conf.int = TRUE, conf.level = 0.8)\n## # A tibble: 4 × 5\n##   term        estimate std.error conf.low conf.high\n##   <chr>          <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)   3487.      58.0    3413.     3561. \n## 2 temp_feel_c     82.2      5.08     75.7      88.7\n## 3 sigma         1282.      40.9    1231.     1336. \n## 4 mean_PPD      3487.      82.0    3382.     3593.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_rstanarm |> \n  gather_draws(`(Intercept)`, temp_feel_c, sigma) |> \n  ungroup() |> \n  mutate(.variable = fct_relevel(factor(.variable), c(\"(Intercept)\", \"temp_feel_c\", \"sigma\"))) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  scale_fill_manual(values = c(clrs[1], clrs[3], clrs[4]), guide = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-18-1.png){width=768}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(bike_brms, conf.int = TRUE, conf.level = 0.8) |> \n  select(-c(effect, component, group))\n## # A tibble: 3 × 5\n##   term            estimate std.error conf.low conf.high\n##   <chr>              <dbl>     <dbl>    <dbl>     <dbl>\n## 1 (Intercept)       3487.      57.5    3414.     3561. \n## 2 temp_feel_c         82.1      5.08     75.6      88.6\n## 3 sd__Observation   1283.      40.3    1232.     1336.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_brms |> \n  gather_draws(b_Intercept, b_temp_feel_c, sigma) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  scale_fill_manual(values = c(clrs[1], clrs[3], clrs[4]), guide = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-20-1.png){width=768}\n:::\n:::\n\n\n### Stan\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_stan_samples$print(variables = c(\"beta0\", \"beta1\", \"sigma\"), \n                        \"mean\", \"median\", \"sd\", ~quantile(.x, probs = c(0.1, 0.9)))\n##  variable    mean  median    sd     10%     90%\n##     beta0 3487.16 3486.85 57.13 3414.32 3560.02\n##     beta1   82.12   82.10  5.06   75.68   88.58\n##     sigma 1282.72 1281.84 40.44 1231.39 1335.31\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_stan_samples |> \n  gather_draws(beta0, beta1, sigma) |> \n  ggplot(aes(x = .value, fill = .variable)) +\n  stat_halfeye(normalize = \"xy\") +\n  scale_fill_manual(values = c(clrs[1], clrs[3], clrs[4]), guide = \"none\") +\n  facet_wrap(vars(.variable), scales = \"free_x\") +\n  labs(x = \"Parameter posterior\") +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n## Fitted draws\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbikes |> \n  add_linpred_draws(bike_rstanarm, ndraws = 100) |> \n  ggplot(aes(x = temp_feel, y = rides)) +\n  geom_point(data = bikes, size = 0.5) +\n  geom_line(aes(y = .linpred, group = .draw), alpha = 0.2, size = 0.5, color = clrs[6]) +\n  labs(x = \"Temperature\", y = \"Rides\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbikes |> \n  add_linpred_draws(bike_brms, ndraws = 100) |> \n  ggplot(aes(x = temp_feel, y = rides)) +\n  geom_point(data = bikes, size = 0.5) +\n  geom_line(aes(y = .linpred, group = .draw), alpha = 0.2, size = 0.5, color = clrs[6]) +\n  labs(x = \"Temperature\", y = \"Rides\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n### Stan\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_stan_samples |> \n  spread_draws(mu[i]) |> \n  mean_qi() |> \n  bind_cols(bikes) |> \n  ggplot(aes(x = temp_feel, y = rides)) +\n  geom_point(size = 0.5) +\n  geom_line(aes(y = mu), color = clrs[6], size = 1) +\n  geom_ribbon(aes(ymin = .lower, ymax = .upper), fill = clrs[6], alpha = 0.2) +\n  labs(x = \"Temperature\", y = \"Rides\")\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\nThere's no easy way to replicate `add_linpred_draws(..., ndraws = BLAH)` with raw Stan like this without running the model again and generating a bunch of simulated `mu`s based on some variable like `n_sim` that we build into the Stan model, but we can use the original 500 rows of data and use `geom_lineribbon()` instead of a spaghetti plot.\n\n:::\n\n## Is β~1~ > 0?\n\nEasily.\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_rstanarm |> \n  spread_draws(temp_feel_c) |> \n  count(temp_feel_c > 0) |> \n  mutate(prob = n / sum(n))\n## # A tibble: 1 × 3\n##   `temp_feel_c > 0`     n  prob\n##   <lgl>             <int> <dbl>\n## 1 TRUE              20000     1\n```\n:::\n\n\n### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_brms |> \n  spread_draws(b_temp_feel_c) |> \n  count(b_temp_feel_c > 0) |> \n  mutate(prob = n / sum(n))\n## # A tibble: 1 × 3\n##   `b_temp_feel_c > 0`     n  prob\n##   <lgl>               <int> <dbl>\n## 1 TRUE                20000     1\n```\n:::\n\n\n### Stan\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_stan_samples |> \n  spread_draws(beta1) |> \n  count(beta1 > 0) |> \n  mutate(prob = n / sum(n))\n## # A tibble: 1 × 3\n##   `beta1 > 0`     n  prob\n##   <lgl>       <int> <dbl>\n## 1 TRUE        20000     1\n```\n:::\n\n\n:::\n\n\n# 9.5: Posterior prediction\n\nWe could plug in some temperature, like 75, and get a predicted count of riders (values from the rstanarm model):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalues_rstanarm <- bike_rstanarm |> \n  tidy() |> \n  split(~term)\n\nb0 <- values_rstanarm$`(Intercept)`$estimate\nb1 <- values_rstanarm$temp_feel_c$estimate\ntemp_mean <- temp_details$scaled_center\n\nb0 + (b1 * (75 - temp_mean))\n## [1] 3968.317\n```\n:::\n\n\nBut this ignores two types of uncertainty:\n\n- Sampling variability in the data, or in $Y$\n- Posterior variability in parameters, or in $\\beta_0$, $\\beta_1$, and $\\sigma$\n\n::: {.panel-tabset}\n### rstanarm\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- bike_rstanarm |> \n  linpred_draws(newdata = tibble(temp_feel_c = (75 - temp_mean))) |> \n  ggplot(aes(x = .linpred)) +\n  stat_halfeye(fill = clrs[6]) +\n  labs(title = \"Predicted riders at 75˚\",\n       subtitle = \"µ only; posterior_linpred()\",\n       x = \"Predicted riders\", y = NULL)\n\np2 <- bike_rstanarm |> \n  predicted_draws(newdata = tibble(temp_feel_c = (75 - temp_mean))) |> \n  ggplot(aes(x = .prediction)) +\n  stat_halfeye(fill = clrs[5]) +\n  labs(title = \"Predicted riders at 75˚\",\n       subtitle = \"rnorm(µ, σ); posterior_predict()\",\n       x = \"Predicted riders\", y = NULL)\n\np1 | p2\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-30-1.png){width=768}\n:::\n:::\n\n\n### brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- bike_brms |> \n  linpred_draws(newdata = tibble(temp_feel_c = (75 - temp_mean))) |> \n  ggplot(aes(x = .linpred)) +\n  stat_halfeye(fill = clrs[6]) +\n  labs(title = \"Predicted riders at 75˚\",\n       subtitle = \"µ only; posterior_linpred()\",\n       x = \"Predicted riders\", y = NULL)\n\np2 <- bike_brms |> \n  predicted_draws(newdata = tibble(temp_feel_c = (75 - temp_mean))) |> \n  ggplot(aes(x = .prediction)) +\n  stat_halfeye(fill = clrs[5]) +\n  labs(title = \"Predicted riders at 75˚\",\n       subtitle = \"rnorm(µ, σ); posterior_predict()\",\n       x = \"Predicted riders\", y = NULL)\n\np1 | p2\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-31-1.png){width=768}\n:::\n:::\n\n\n\n### Stan\n\nAHH SO THIS IS HOW YOU DO `newdata = WHATEVER` WITH RAW STAN. Build `mu` (`posterior_linpred()`) on your own with the coefficients from each draw, then use that `mu` in `rnorm()` (`posterior_predict()`). You can then get the expectation of the posterior (`posterior_epred()`) by taking the average of that.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_75 <- bike_stan_samples |> \n  spread_draws(beta0, beta1, sigma) |> \n  mutate(mu = beta0 + (beta1 * (75 - temp_mean)),  # like posterior_linpred()\n         y_new = rnorm(n(), mean = mu, sd = sigma))  # like posterior_predict()\n\np1 <- predict_75 |> \n  ggplot(aes(x = mu)) +\n  stat_halfeye(fill = clrs[6]) +\n  labs(title = \"Predicted riders at 75˚\",\n       subtitle = \"µ only; like posterior_linpred()\",\n       x = \"Predicted riders\", y = NULL)\n\np2 <- predict_75 |> \n  ggplot(aes(x = y_new)) +\n  stat_halfeye(fill = clrs[5]) +\n  labs(title = \"Predicted riders at 75˚\",\n       subtitle = \"rnorm(µ, σ); like posterior_predict()\",\n       x = \"Predicted riders\", y = NULL)\n\np1 | p2\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-32-1.png){width=768}\n:::\n\n```{.r .cell-code}\n\npredict_75 |> \n  summarize(epred = mean(y_new))\n## # A tibble: 1 × 1\n##   epred\n##   <dbl>\n## 1 3968.\n```\n:::\n\n\n:::\n\n\n# 9.6: Sequential regression modeling\n\nBayesianism is all about updating. What does this relationship between temperature and ridership as data is slowly collected, like after 30 days, 60 days, and 500 days? How does the posterior evolve and settle?\n\nI'll do this just with brms:\n\n\n::: {.cell hash='09-chapter_cache/html/model-bike-sequential_81900b162f94355184a825e41d6f4fd3'}\n\n```{.r .cell-code}\npriors <- c(prior(normal(5000, 1000), class = Intercept),\n            prior(normal(100, 40), class = b, coef = \"temp_feel_c\"),\n            prior(exponential(0.0008), class = sigma))\n\nbike_phases <- tribble(\n  ~phase, ~data,\n  1,      slice(bikes, 1:30),\n  2,      slice(bikes, 1:60),\n  3,      bikes\n) |> \n  mutate(model = map(data, ~{\n    brm(\n      bf(rides ~ temp_feel_c),\n      data = .,\n      family = gaussian(),\n      prior = priors,\n      chains = 4, iter = 5000*2, seed = BAYES_SEED, \n      backend = \"cmdstanr\", refresh = 0\n    )})\n  )\n## Start sampling\n## Start sampling\n## Start sampling\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_phase_draws <- bike_phases |> \n  mutate(draws = map(model, ~spread_draws(., b_temp_feel_c)))\n\nphases_coefs <- bike_phase_draws |> \n  mutate(coef_plot = map2(draws, phase, ~{\n    ggplot(.x, aes(x = b_temp_feel_c)) +\n      stat_halfeye(fill = clrs[3]) +\n      coord_cartesian(xlim = c(-10, 100)) +\n      labs(title = paste(\"Phase\", .y))\n  }))\n\nwrap_plots(phases_coefs$coef_plot)\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-33-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbike_phase_preds <- bike_phases |> \n  mutate(preds = map2(data, model, ~{\n    .x |> \n      add_linpred_draws(.y, ndraws = 50) |> \n      ungroup()\n  }))\n\nphases_preds <- bike_phase_preds |> \n  mutate(pred_plot = pmap(list(data, preds, phase), ~{\n    ggplot(..2, aes(x = temp_feel, y = rides)) +\n      geom_point(data = ..1, size = 0.5) +\n      geom_line(aes(y = .linpred, group = .draw), \n                alpha = 0.2, size = 0.5, color = clrs[6]) +\n      labs(title = paste(\"Phase\", ..3)) +\n      coord_cartesian(xlim = c(40, 90), ylim = c(0, 7000))\n  }))\n\nwrap_plots(phases_preds$pred_plot)\n```\n\n::: {.cell-output-display}\n![](09-chapter_files/figure-html/unnamed-chunk-34-1.png){width=768}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}