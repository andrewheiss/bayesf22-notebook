{
  "hash": "1a335ea36e1e6b3b15854330adad8812",
  "result": {
    "markdown": "---\ntitle: \"Video #6 code\"\nsubtitle: \"Good & bad controls\"\ndate: \"September 21, 2022\"\neditor_options: \n  chunk_output_type: inline\n---\n\n\n<div class=\"ratio ratio-16x9\">\n<iframe src=\"https://www.youtube.com/embed/NSuTaeW6Orc\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div>\n\nNo code here; the lecture is a good overview of DAGs and good/bad controls.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(furrr)\nlibrary(ggdag)\nlibrary(ggraph)\nlibrary(patchwork)\n\n# Parallel stuff\nplan(multisession, workers = 4)\n\n# Plot stuff\nclrs <- MetBrewer::met.brewer(\"Lakota\", 6)\ntheme_set(theme_bw())\n\n# Seed stuff\nset.seed(1234)\n```\n:::\n\n\n## Post-treatment mediator\n\nIf we have this DAG, where $Z$ is a mediator between $X$ and $Y$, and $u$ is some unobserved confounding, should we control for $Z$? No!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndagify(\n  Y ~ Z + u,\n  Z ~ X + u,\n  exposure = \"X\",\n  outcome = \"Y\",\n  latent = \"u\",  \n  coords = list(x = c(X = 1, Y = 4, Z = 2, u = 3),\n                y = c(X = 1, Y = 1, Z = 1, u = 2))) %>% \n  tidy_dagitty() %>% \n  node_status() %>% \n  as_tibble() %>% \n  left_join(tribble(\n    ~name, ~to, ~coef,\n    \"X\",   \"Z\", 1,\n    \"u\",   \"Z\", 1,\n    \"u\",   \"Y\", 1,\n    \"Z\",   \"Y\", 1\n  ), by = c(\"name\", \"to\")) %>% \n  mutate(latent = status == \"latent\",\n         latent = ifelse(is.na(latent), FALSE, latent)) %>% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_edges(aes(edge_linetype = latent, label = coef), \n                 angle_calc = \"along\", label_dodge = grid::unit(10, 'points')) +\n  geom_dag_point(aes(color = status)) +\n  geom_dag_text(aes(label = name), size = 3.5, color = \"white\") +\n  scale_color_manual(values = c(clrs[1], \"grey50\", clrs[4]), \n                     na.value = \"black\", guide = \"none\") +\n  scale_edge_linetype_manual(values = c(\"solid\", \"43\"), guide = \"none\") +\n  ylim(c(0.9, 2.1)) +\n  theme_dag()\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/mediator-dag-1-1.png){fig-align='center' width=528}\n:::\n:::\n\n\nHere's a simulation to show why. It uses completely random and independent values for $X$ and $u$, and $Z$ and $Y$ are determined by coefficients (1 in this case). When using the model `Y ~ X`, $X$ has the correct coefficient (0); when using the model `Y ~ X + Z`, the coefficient for $X$ is super wrong and negative:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100\nbXZ <- 1\nbZY <- 1\n\nsim <- tibble(sim_id = 1:1000) %>% \n  mutate(sim = future_map(sim_id, ~{\n    tibble(\n      X = rnorm(n),\n      u = rnorm(n),\n      Z = rnorm(n, bXZ*X + u),\n      Y = rnorm(n, bZY*Z + u)\n    )\n  }, .options = furrr_options(seed = TRUE))) %>% \n  mutate(bX = future_map_dbl(sim, ~coef(lm(Y ~ X, data = .))[\"X\"]),\n         bXZ = future_map_dbl(sim, ~coef(lm(Y ~ X + Z, data = .))[\"X\"]))\n\nsim %>%\n  select(-sim) %>%\n  pivot_longer(starts_with(\"b\")) %>% \n  mutate(correct = ifelse(name == \"bX\", \"Correct\", \"Wrong\"),\n         name = recode(name, \"bX\" = \"Y ~ X\", \"bXZ\" = \"Y ~ X + Z\")) %>%\n  ggplot(aes(x = value, color = name, linetype = correct)) +\n  geom_density(size = 1) +\n  scale_color_manual(values = c(clrs[5], clrs[2])) +\n  scale_linetype_manual(values = c(\"solid\", \"dotted\")) +\n  xlim(c(-1.5, 2)) +\n  labs(x = \"β for X\", linetype = NULL, color = NULL) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/sim-mediator-1-1.png){width=672}\n:::\n:::\n\n\nWe can see the same thing even if the coefficient between $Z$ and $Y$ is set to zero:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndagify(\n  Y ~ Z + u,\n  Z ~ X + u,\n  exposure = \"X\",\n  outcome = \"Y\",\n  latent = \"u\",  \n  coords = list(x = c(X = 1, Y = 4, Z = 2, u = 3),\n                y = c(X = 1, Y = 1, Z = 1, u = 2))) %>% \n  tidy_dagitty() %>% \n  node_status() %>% \n  as_tibble() %>% \n  left_join(tribble(\n    ~name, ~to, ~coef,\n    \"X\",   \"Z\", 1,\n    \"u\",   \"Z\", 1,\n    \"u\",   \"Y\", 1,\n    \"Z\",   \"Y\", 0\n  ), by = c(\"name\", \"to\")) %>% \n  mutate(latent = status == \"latent\",\n         latent = ifelse(is.na(latent), FALSE, latent)) %>% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_edges(aes(edge_linetype = latent, label = coef), \n                 angle_calc = \"along\", label_dodge = grid::unit(10, 'points')) +\n  geom_dag_point(aes(color = status)) +\n  geom_dag_text(aes(label = name), size = 3.5, color = \"white\") +\n  scale_color_manual(values = c(clrs[1], \"grey50\", clrs[4]), \n                     na.value = \"black\", guide = \"none\") +\n  scale_edge_linetype_manual(values = c(\"solid\", \"43\"), guide = \"none\") +\n  ylim(c(0.9, 2.1)) +\n  theme_dag()\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/mediator-dag-2-1.png){fig-align='center' width=528}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100\nbXZ <- 1\nbZY <- 0\n\nsim <- tibble(sim_id = 1:1000) %>% \n  mutate(sim = future_map(sim_id, ~{\n    tibble(\n      X = rnorm(n),\n      u = rnorm(n),\n      Z = rnorm(n, bXZ*X + u),\n      Y = rnorm(n, bZY*Z + u)\n    )\n  }, .options = furrr_options(seed = TRUE))) %>% \n  mutate(bX = future_map_dbl(sim, ~coef(lm(Y ~ X, data = .))[\"X\"]),\n         bXZ = future_map_dbl(sim, ~coef(lm(Y ~ X + Z, data = .))[\"X\"]))\n\nsim %>%\n  select(-sim) %>%\n  pivot_longer(starts_with(\"b\")) %>% \n  mutate(correct = ifelse(name == \"bX\", \"Correct\", \"Wrong\"),\n         name = recode(name, \"bX\" = \"Y ~ X\", \"bXZ\" = \"Y ~ X + Z\")) %>%\n  ggplot(aes(x = value, color = name, linetype = correct)) +\n  geom_density(size = 1) +\n  scale_color_manual(values = c(clrs[5], clrs[2])) +\n  scale_linetype_manual(values = c(\"solid\", \"dotted\")) +\n  xlim(c(-1.5, 2)) +\n  labs(x = \"β for X\", linetype = NULL, color = NULL) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/sim-mediator-2-1.png){width=672}\n:::\n:::\n\n\n## Case-control bias\n\nHere $Z$ comes after the outcome, like if $X$ is education, $Y$ is occupation, and $Z$ is income. Should we control for $Z$? Surely that's harmless? \n\nNope!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndagify(\n  Y ~ X,\n  Z ~ Y,\n  exposure = \"X\",\n  outcome = \"Y\",\n  coords = list(x = c(X = 1, Y = 2, Z = 3),\n                y = c(X = 1, Y = 1, Z = 1))) %>% \n  tidy_dagitty() %>% \n  node_status() %>% \n  as_tibble() %>% \n  left_join(tribble(\n    ~name, ~to, ~coef,\n    \"X\",   \"Y\", 1,\n    \"Y\",   \"Z\", 1\n  ), by = c(\"name\", \"to\")) %>% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_edges(aes(label = coef), \n                 angle_calc = \"along\", label_dodge = grid::unit(10, 'points')) +\n  geom_dag_point(aes(color = status)) +\n  geom_dag_text(aes(label = name), size = 3.5, color = \"white\") +\n  scale_color_manual(values = c(clrs[1], clrs[4]), \n                     na.value = \"black\", guide = \"none\") +\n  xlim(c(0.75, 3.25)) + ylim(c(0.9, 1.1)) +\n  theme_dag()\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/case-control-dag-1.png){fig-align='center' width=75%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100\nbXY <- 1\nbYZ <- 1\n\nsim <- tibble(sim_id = 1:1000) %>% \n  mutate(sim = future_map(sim_id, ~{\n    tibble(\n      X = rnorm(n),\n      Z = rnorm(n, bXY*X),\n      Y = rnorm(n, bYZ*Z)\n    )\n  }, .options = furrr_options(seed = TRUE))) %>% \n  mutate(bX = future_map_dbl(sim, ~coef(lm(Y ~ X, data = .))[\"X\"]),\n         bXZ = future_map_dbl(sim, ~coef(lm(Y ~ X + Z, data = .))[\"X\"]))\n\nsim %>%\n  select(-sim) %>%\n  pivot_longer(starts_with(\"b\")) %>% \n  mutate(correct = ifelse(name == \"bX\", \"Correct\", \"Wrong\"),\n         name = recode(name, \"bX\" = \"Y ~ X\", \"bXZ\" = \"Y ~ X + Z\")) %>%\n  ggplot(aes(x = value, color = name, linetype = correct)) +\n  geom_density(size = 1) +\n  scale_color_manual(values = c(clrs[5], clrs[2])) +\n  scale_linetype_manual(values = c(\"solid\", \"dotted\")) +\n  xlim(c(-1, 2)) +\n  labs(x = \"β for X\", linetype = NULL, color = NULL) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/sim-case-control-1.png){width=672}\n:::\n:::\n\n\n## Precision parasite\n\nHere $Z$ comes before the treatment and doesn't open any backdoors. Should we control for it? Again, it should be harmless? \n\nIn this case, it doesn't distort the effect, but it does reduce the precision of the estimate\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndagify(\n  Y ~ X,\n  X ~ Z,\n  exposure = \"X\",\n  outcome = \"Y\",\n  coords = list(x = c(X = 2, Y = 3, Z = 1),\n                y = c(X = 1, Y = 1, Z = 1))) %>% \n  tidy_dagitty() %>% \n  node_status() %>% \n  as_tibble() %>% \n  left_join(tribble(\n    ~name, ~to, ~coef,\n    \"X\",   \"Y\", 1,\n    \"Z\",   \"X\", 1\n  ), by = c(\"name\", \"to\")) %>% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_edges(aes(label = coef), \n                 angle_calc = \"along\", label_dodge = grid::unit(10, 'points')) +\n  geom_dag_point(aes(color = status)) +\n  geom_dag_text(aes(label = name), size = 3.5, color = \"white\") +\n  scale_color_manual(values = c(clrs[1], clrs[4]), \n                     na.value = \"black\", guide = \"none\") +\n  xlim(c(0.75, 3.25)) + ylim(c(0.9, 1.1)) +\n  theme_dag()\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/parasite-dag-1.png){fig-align='center' width=75%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100\nbZX <- 1\nbXY <- 1\n\nsim <- tibble(sim_id = 1:1000) %>% \n  mutate(sim = future_map(sim_id, ~{\n    tibble(\n      Z = rnorm(n),\n      X = rnorm(n, bZX*Z),\n      Y = rnorm(n, bXY*X)\n    )\n  }, .options = furrr_options(seed = TRUE))) %>% \n  mutate(bX = future_map_dbl(sim, ~coef(lm(Y ~ X, data = .))[\"X\"]),\n         bXZ = future_map_dbl(sim, ~coef(lm(Y ~ X + Z, data = .))[\"X\"]))\n\nsim %>%\n  select(-sim) %>%\n  pivot_longer(starts_with(\"b\")) %>% \n  mutate(correct = ifelse(name == \"bX\", \"Correct\", \"Wrong\"),\n         name = recode(name, \"bX\" = \"Y ~ X\", \"bXZ\" = \"Y ~ X + Z\")) %>%\n  ggplot(aes(x = value, color = name, linetype = correct)) +\n  geom_density(size = 1) +\n  scale_color_manual(values = c(clrs[5], clrs[2])) +\n  scale_linetype_manual(values = c(\"solid\", \"dotted\")) +\n  xlim(c(0.5, 1.5)) +\n  labs(x = \"β for X\", linetype = NULL, color = NULL) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/sim-parasite-1.png){width=672}\n:::\n:::\n\n\n## Bias amplification\n\nLike the precision parasite situation, but with an unobserved confounder $u$. Really bad stuff happens here (\"something truly awful\" in the lecture). The true coefficient between $X$ and $Y$ here is 0, but the estimate is wrong with both models!\n\nIncluding causes of the exposure is generally a really bad idea. Covariation in $X$ and $Y$ requires variation in their causes, but within different levels of $Z$ (since we're stratifying by or adjusting for $Z$), there's less variation in $X$. That makes the unobserved $u$ confounder more important when determining $X$.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndagify(\n  Y ~ X + u,\n  X ~ Z + u,\n  exposure = \"X\",\n  outcome = \"Y\",\n  latent = \"u\",  \n  coords = list(x = c(X = 2, Y = 4, Z = 1, u = 3),\n                y = c(X = 1, Y = 1, Z = 1, u = 2))) %>% \n  tidy_dagitty() %>% \n  node_status() %>% \n  as_tibble() %>% \n  left_join(tribble(\n    ~name, ~to, ~coef,\n    \"X\",   \"Y\", 0,\n    \"u\",   \"X\", 1,\n    \"u\",   \"Y\", 1,\n    \"Z\",   \"X\", 1\n  ), by = c(\"name\", \"to\")) %>% \n  mutate(latent = status == \"latent\",\n         latent = ifelse(is.na(latent), FALSE, latent)) %>% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_edges(aes(edge_linetype = latent, label = coef), \n                 angle_calc = \"along\", label_dodge = grid::unit(10, 'points')) +\n  geom_dag_point(aes(color = status)) +\n  geom_dag_text(aes(label = name), size = 3.5, color = \"white\") +\n  scale_color_manual(values = c(clrs[1], \"grey50\", clrs[4]), \n                     na.value = \"black\", guide = \"none\") +\n  scale_edge_linetype_manual(values = c(\"solid\", \"43\"), guide = \"none\") +\n  ylim(c(0.9, 2.1)) +\n  theme_dag()\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/amplification-dag-1.png){fig-align='center' width=75%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100\nbZX <- 1\nbXY <- 0\n\nsim <- tibble(sim_id = 1:1000) %>% \n  mutate(sim = future_map(sim_id, ~{\n    tibble(\n      Z = rnorm(n),\n      u = rnorm(n),\n      X = rnorm(n, bZX*Z + u),\n      Y = rnorm(n, bXY*X + u)\n    )\n  }, .options = furrr_options(seed = TRUE))) %>% \n  mutate(bX = future_map_dbl(sim, ~coef(lm(Y ~ X, data = .))[\"X\"]),\n         bXZ = future_map_dbl(sim, ~coef(lm(Y ~ X + Z, data = .))[\"X\"]))\n\nsim %>%\n  select(-sim) %>%\n  pivot_longer(starts_with(\"b\")) %>% \n  mutate(correct = ifelse(name == \"bX\", \"Wrong\", \"Wrong but worse\"),\n         name = recode(name, \"bX\" = \"Y ~ X\", \"bXZ\" = \"Y ~ X + Z\")) %>%\n  ggplot(aes(x = value, color = name, linetype = correct)) +\n  geom_density(size = 1) +\n  scale_color_manual(values = c(clrs[5], clrs[2])) +\n  scale_linetype_manual(values = c(\"dashed\", \"dotted\")) +\n  geom_vline(xintercept = 0) +\n  annotate(geom = \"text\", x = -0.02, y = 2.5, label = \"Actual value\", angle = 90) +\n  xlim(c(-0.15, 1)) +\n  labs(x = \"β for X\", linetype = NULL, color = NULL) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/sim-amplification-1.png){width=672}\n:::\n:::\n\n\nThis whole idea that controlling for $Z$ in the presence of unmeasured confounding amplifies the bias is really weird. Here's another simulation from McElreath's slides, where there is no relationship between $X$ and $Y$. There is a slight relationship between $X$ and $Y$ because of $u$, but once we stratify by $Z$, those slopes get bigger within each group!\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(Z = rbinom(1000, 1, 0.5),\n       u = rnorm(1000)) %>% \n  mutate(X = rnorm(1000, 7*Z + u),\n         Y = rnorm(1000, 0*X + u)) %>% \n  ggplot(aes(x = X, y = Y, color = factor(Z))) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  geom_smooth(aes(color = NULL), method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](06-video_files/figure-html/plot-sim-amplify-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "06-video_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}